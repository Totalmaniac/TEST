$mailboxAddress = "testmailbox_itsm42@wearejust.co.uk"
$forwardedAddress = "noman.khan@wearejust.co.uk"

# Check if forwarding is configured
$forwarding = Get-Mailbox $mailboxAddress | Select-Object ForwardingSmtpAddress
 
if(!$forwarding) {
  # Send non-configured report
  $message = New-MailMessage -To $forwardedAddress -From "testmailbox_itsm42@wearejust.co.uk" -Subject "Forwarding Not Set" -Body "Forwarding is not enabled for $mailboxAddress"
  Send-Mail $message -SmtpServer "test.contact@wearejust.co.uk"
 
} else {
 
  # Send test email 
  $testMessage = New-MailMessage -To $forwardedAddress -From $mailboxAddress -Subject "Forwarder Test" -Body "This is a test message" 
  Send-Mail $testMessage -SmtpServer "test.contact@wearejust.co.uk"
 }
  # Check if test message was received
  if(!$?) {
    # Send report that forwarder failed
    $reportMessage = New-MailMessage -To $forwardedAddress -From "testmailbox_itsm42@wearejust.co.uk" -Subject "Forwarder Issue" -Body "The forwarder for $mailboxAddress may not be working"
    Send-Mail $reportMessage -SmtpServer "test.contact@wearejust.co.uk"
 
  } else {
    Write-Host "Test email successfully sent"
  }
---------------------------------------------------------------------------


To check if a mailbox's forwarder is functioning and send a report email to users if it's not working, you'll need a script that:
Validates the functionality of the forwarder.
Sends an email report to users if the forwarder isn't working as expected.
Here's a general outline of how you might approach this task using PowerShell:
powershellCopy 

code# Define the mailbox address and the forwarded address

$mailboxAddress = "mailbox@example.com"
$forwardedAddress = "forwardedaddress@example.com"
# Check if the forwarder is functioning
$forwardingStatus = Get-Mailbox -Identity $mailboxAddress | Select-Object ForwardingSmtpAddress
if ($forwardingStatus.ForwardingSmtpAddress -eq $null) {
    # Forwarder is not set
    # Send an email report indicating that the forwarder is not set
    $reportSubject = "Forwarder Not Set for $mailboxAddress"
    $reportBody = "The forwarder is not set for the mailbox: $mailboxAddress."
    Send-MailMessage -To $forwardedAddress -From "sender@example.com" -Subject $reportSubject -Body $reportBody -SmtpServer "smtp.example.com"
}
else {
    # Forwarder is set, attempt to send a test email to check its functionality
    $testSubject = "Test Forwarder for $mailboxAddress"
    $testBody = "This is a test email to check the functionality of the forwarder."
    Send-MailMessage -To $forwardedAddress -From $mailboxAddress -Subject $testSubject -Body $testBody -SmtpServer "smtp.example.com"
    # Check if the test email was successfully sent
    if ($?) {
        # Test email sent successfully
        Write-Host "Test email sent successfully to $forwardedAddress."
    }
    else {
        # Test email failed to send
        # Send a report email indicating the forwarder might not be working
        $reportSubject = "Forwarder Issue for $mailboxAddress"
        $reportBody = "The forwarder for $mailboxAddress might not be working properly. Please check."
        Send-MailMessage -To $forwardedAddress -From "sender@example.com" -Subject $reportSubject -Body $reportBody -SmtpServer "smtp.example.com"
    }
}


This script does the following:
Checks if the specified mailbox has a forwarder set.
If the forwarder is not set, it sends a report email indicating so.
If the forwarder is set, it attempts to send a test email through the forwarder. If the test fails, it sends a report email indicating a potential issue with the forwarder.
Replace "mailbox@example.com", "forwardedaddress@example.com", "sender@example.com", and "smtp.example.com" with your actual mailbox addresses, sender address, and SMTP server details.
Please note that this script assumes you have the necessary permissions to check mailbox forwarding and send test emails. Also, ensure that the SMTP server details are accurate and accessible from the system running this script.

----------------------------------------------------------------------------------------------------------------


Here's a PowerShell script framework incorporating the requested tasks:

PowerShell
# Connect to Exchange Online
Connect-ExchangeOnline -UserPrincipalName <your_admin_UPN>

# Get the DL's forwarder address
$dlName = "<distribution_list_name>"
$dl = Get-DistributionGroup $dlName
$forwarderAddress = $dl.ForwardingAddress

# Send a test email with tracking pixel
$testEmailSubject = "Test Email for Forwarder - $(Get-Date -Format yyyyMMdd-HHmm)"
$testEmailBody = "This is a test email to check the forwarder on $dlName."
$trackingPixelUrl = "https://your-tracking-server/track-pixel.gif"
Send-MailMessage -From "sender@yourdomain.com" -To $forwarderAddress -Subject $testEmailSubject -Body $testEmailBody -BodyAsHtml -SmtpServer "smtp.office365.com" -Port 587 -UseSsl

# Check for delivery status (example using a tracking pixel)
$deliveryStatus = Test-NetConnection $trackingPixelUrl -InformationLevel Quiet

# Trigger actions based on delivery status
if ($deliveryStatus.StatusCode -eq 200) {
    # Forwarder working
    Write-Output "Forwarder is working."
    # (Optional) Send success notification to Dynatrace or log in Dynatrace using Custom Extensions
} else {
    # Forwarder not working
    Write-Output "Forwarder is not working."
    # Send report email
    Send-MailMessage -From "sender@yourdomain.com" -To "recipients@yourdomain.com" -Subject "Forwarder Failure on $dlName" -Body "The forwarder on $dlName is not working. Please investigate." -SmtpServer "smtp.office365.com" -Port 587 -UseSsl
    # Trigger Dynatrace alert using Custom Extensions or external automation
}
Use code with caution. Learn more
Important Notes:

Replace placeholders:
<your_admin_UPN>: Your Exchange Online admin credentials.
<distribution_list_name>: Name of the DL to check.
sender@yourdomain.com, recipients@yourdomain.com: Replace with appropriate email addresses.
https://your-tracking-server/track-pixel.gif: Replace with your tracking pixel URL.

-------------------------------------

HUZ:

# Define the shared mailbox address and relevant user(s) to notify
$sharedMailboxAddress = "sharedmailbox@example.com"
$notifyUsers = "user1@example.com", "user2@example.com"  # Add relevant user email addresses

# Connect to Exchange Online PowerShell
Connect-ExchangeOnline -UserPrincipalName youradmin@example.com -ShowProgress $true

# Check if email forwarding is configured for the shared mailbox
$forwardingStatus = Get-Mailbox -Identity $sharedMailboxAddress | Select-Object ForwardingSmtpAddress

if ($forwardingStatus.ForwardingSmtpAddress -ne $null) {
    # Forwarding is configured
    $forwardingState = "Forwarding is ENABLED for $sharedMailboxAddress to $($forwardingStatus.ForwardingSmtpAddress)"
} else {
    # Forwarding is not configured
    $forwardingState = "Forwarding is NOT ENABLED for $sharedMailboxAddress"
}

# Send email notifications to relevant users with the forwarding state
foreach ($user in $notifyUsers) {
    $emailSubject = "Shared Mailbox Forwarding Status"
    $emailBody = "Hello, 

    This is to inform you about the forwarding status of the shared mailbox $sharedMailboxAddress:

    $forwardingState

    Regards,
    Your IT Team"
    
    Send-MailMessage -To $user -From "sender@example.com" -Subject $emailSubject -Body $emailBody -SmtpServer "smtp.example.com"
}

-------------------------
INSH:

# Connect to Exchange Online
Connect-ExchangeOnline
 
# Get the mailbox you want to check 
$mailbox = Get-Mailbox -Identity "user@domain.com"
 
# Check if email forwarding is enabled
if($mailbox.DeliverToMailboxAndForward) {
 
  # Get the forwarding address 
  $forwardTo = $mailbox.ForwardingAddress
 
  # Output results
  Write-Host "Forwarding is enabled for $($mailbox.UserPrincipalName)"
  Write-Host "Forwarding to: $forwardTo"
 
}
else {
 
  Write-Host "Forwarding is NOT enabled for $($mailbox.UserPrincipalName)"
 
}

