$groups = Import-Csv C:\dl.csv

foreach ($group in $groups) {

    $name = $group.Name
    $alias = $group.Alias 
    $managedBy = $group.ManagedBy -split ";"
    $members = $group.Members -split ";"
    $primarySmtpAddress = $group.PrimarySmtpAddress

    New-DistributionGroup -Name $name -Alias $alias -ManagedBy $managedBy -Members $members -PrimarySmtpAddress $primarySmtpAddress
}

-----------------------------------------------------------------------------


$dl = "DL Name"
$members = Get-DistributionGroupMember -Identity $dl | 
             ForEach-Object { 
                Get-Recipient -Identity $_.Name | 
                    Select-Object -ExpandProperty PrimarySmtpAddress 
             }

$members

-----------------------------------------------------------------------------

# Increase console display width and height 
$host.UI.RawUI.BufferSize = New-Object System.Management.Automation.Host.Size(500, 99999)
$host.UI.RawUI.WindowSize = New-Object System.Management.Automation.Host.Size(200, 99999)

# Store distribution group details
$dlInfo = @()

# Get all distribution groups
$distributionGroups = Get-DistributionGroup -ResultSize Unlimited

foreach ($dg in $distributionGroups) {

   # Get primary SMTP addresses   
   $managedBy = Get-User -Identity $dg.ManagedBy | 
                   Select-Object -ExpandProperty PrimarySmtpAddress

   $members = Get-DistributionGroupMember -Identity $dg.Name |
                Select-Object -ExpandProperty PrimarySmtpAddress

   # Format member list over multiple lines
   $memberList = @($members) -join "`n"

   # Create custom object with formatted output
   $props = [ordered]@{
        Name = $dg.Name
        Alias = $dg.Alias 
        Description = $dg.Description
        ManagedBy = $managedBy -join ";"        
        Members = $memberList
   }

   $dlInfo += New-Object -TypeName PSObject -Property $props
}

# Output objects vertically with no truncation
$dlInfo | Format-List


------------------------------

$dl = "DL Name"

$owners = Get-DistributionGroup -Identity $dl | ForEach-Object {
    Get-Recipient -Identity $_.ManagedBy | 
        Select-Object -ExpandProperty PrimarySmtpAddress 
}

$owners


--------------------

try {
  $owners = Get-DistributionGroup -Identity $dl | ForEach-Object { 
    Get-Recipient -Identity $_.ManagedBy | Select-Object -ExpandProperty PrimarySmtpAddress  
  }
} catch {
  Write-Output "An error occurred: $_"
}
-------------------------------


$DLOwners = Get-DistributionGroup <DLName> | Select-Object ManagedBy

ForEach ($Owner in $DLOwners.ManagedBy) {
    Get-User -Filter "DisplayName -eq '$Owner'" | Select-Object PrimarySmtpAddress
}
--------------

$DLOwners = Get-DistributionGroup <DLName> | Select-Object ManagedBy

ForEach ($owner in $DLOwners.ManagedBy){
    Get-User -Filter "UserPrincipalName -eq '$owner'" | Select-Object PrimarySmtpAddress
}


---------------------
# Connect to Exchange Online
Connect-ExchangeOnline

# Get the DL you want the owner of 
$dl = Get-DistributionGroup -Identity "DLName"

# Get the owner's ID 
$ownerId = $dl.ManagedBy

# Get the user object for the owner 
$owner = Get-User -Identity $ownerId

# Output the email address 
Write-Output $owner.EmailAddress
