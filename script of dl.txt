$groups = Import-Csv C:\dl.csv

foreach ($group in $groups) {

    $name = $group.Name
    $alias = $group.Alias 
    $managedBy = $group.ManagedBy -split ";"
    $members = $group.Members -split ";"
    $primarySmtpAddress = $group.PrimarySmtpAddress

    New-DistributionGroup -Name $name -Alias $alias -ManagedBy $managedBy -Members $members -PrimarySmtpAddress $primarySmtpAddress
}

-------------------------------------------

$groups = Import-Csv C:\dl.csv

foreach ($group in $groups) {

    $name = $group.Name
    $alias = $group.Alias
    
    $managedBy = $group.ManagedBy -split ";"
    $managedByDisplayNames = $managedBy | ForEach-Object {
        Get-Recipient -Identity $_ | Select-Object -ExpandProperty DisplayName
    }

    $members = $group.Members -split ";" 
    $memberDisplayNames = $members | ForEach-Object {
        Get-Recipient -Identity $_ | Select-Object -ExpandProperty DisplayName
    }

    New-DistributionGroup -Name $name -Alias $alias `
        -ManagedBy $managedByDisplayNames `
        -Members $memberDisplayNames
}

------------------------------------------------------
ADDING THE NAME OF SYNCED AD GROUP:
$groups = Import-Csv C:\dl.csv

foreach ($group in $groups) {
    $name = $group.Name
    $managedBy = $group.ManagedBy -split ";"
    $members = $group.Members -split ";"

    # Assuming $name is the name of the synced AD group
    foreach ($member in $members) {
        Add-ADGroupMember -Identity $name -Members $member
    }
}
This script assumes that the $name variable contains the name of the synced AD group you want to add members to. It iterates through the list of members in the CSV file and adds each member to the specified AD group using the Add-ADGroupMember cmdlet.

--------------------------------------------------------
$groups = Import-Csv C:\dl.csv

foreach ($group in $groups) {
    $name = $group.Name
    $alias = $group.Alias 
    $managedBy = $group.ManagedBy -split ";"
    $members = $group.Members -split ";"
    $primarySmtpAddress = $group.PrimarySmtpAddress

    # Fetch synchronized groups from Azure AD
    $syncedGroups = Get-AzureADGroup | Where-Object { $_.DisplayName -like "*YourSyncPattern*" }

    # Add synchronized groups to the Office 365 distribution group
    foreach ($syncedGroup in $syncedGroups) {
        Add-DistributionGroupMember -Identity $name -Member $syncedGroup.ObjectId
    }

    # Create the Office 365 distribution group
    New-DistributionGroup -Name $name -Alias $alias -ManagedBy $managedBy -Members $members -PrimarySmtpAddress $primarySmtpAddress
}

--------------------------------------------------------
# Import CSV containing distribution groups information
$groups = Import-Csv C:\dl.csv

foreach ($group in $groups) {

    # Extract information from CSV
    $name = $group.Name
    $alias = $group.Alias 
    $managedBy = $group.ManagedBy -split ";"
    $members = $group.Members -split ";"
    $primarySmtpAddress = $group.PrimarySmtpAddress

    # Create distribution group online
    New-DistributionGroup -Name $name -Alias $alias -ManagedBy $managedBy -Members $members -PrimarySmtpAddress $primarySmtpAddress

    # Get Active Directory groups
    $adGroups = Get-ADGroup -Filter * -Properties Members

    foreach ($adGroup in $adGroups) {
        # Check if the AD group is a member of the distribution list
        if ($adGroup.Members -contains $name) {
            # Add users from the AD group to the distribution list
            foreach ($member in $adGroup.Members) {
                Add-DistributionGroupMember -Identity $name -Member $member
            }
        }
    }
}
