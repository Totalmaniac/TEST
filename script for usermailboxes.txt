$output = @()
Get-Mailbox -ResultSize Unlimited | ForEach-Object {
    $user = $_.DisplayName
    $mailboxSize = ($_.TotalItemSize.ToString().Split("(")[1].Split(" ")[0]/1MB).ToString("N2") + " MB"
    if($_.ArchiveStatus -eq "Active"){
        $archiveSize = ($_.ArchiveTotalItemSize.ToString().Split("(")[1].Split(" ")[0]/1MB).ToString("N2") + " MB"
    }
    else {
        $archiveSize = "Disabled"
    }
    $output += New-Object PSObject -Property @{
        "Username" = $user
        "MailboxSize" = $mailboxSize
        "ArchiveSize" = $archiveSize
    }
}

$output | Export-Csv -Path "C:\usermailboxes.csv" -NoTypeInformation

ForEach-Object : You cannot call a method on a null-valued expression.
At line:1 char:37
+ Get-Mailbox -ResultSize Unlimited | ForEach-Object {
+                                     ~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [ForEach-Object], RuntimeException
    + FullyQualifiedErrorId : InvokeMethodOnNull,Microsoft.PowerShell.Commands.ForEachObjectCommand


Get-Mailbox -ResultSize Unlimited -Filter {RecipientTypeDetails -eq "UserMailbox"} | Select-Object DisplayName, @{Name="TotalItemSize";Expression={$_.TotalItemSize.ToString().Split("(")[1].Split(" ")[0]}}, @{Name="ArchiveTotalItemSize";Expression={$_.ArchiveTotalItemSize.ToString().Split("(")[1].Split(" ")[0]}} | Export-Csv -Path C:\users\usermailboxes.csv -NoTypeInformation


Get-Mailbox -ResultSize Unlimited | Select-Object DisplayName,@{Name="TotalItemSize (MB)";Expression={$_.TotalItemSize.ToString().Split("(")[1].Split(" ")[0]}} | Export-Csv -Path C:\mailboxes.csv -NoTypeInformation


Get-Mailbox -ResultSize Unlimited | Get-MailboxStatistics | Select DisplayName, @{Name="TotalItemSize (GB)";Expression={[math]::Round($_.TotalItemSize.Value.ToGB(),2)}} | Sort-Object TotalItemSizeGB -Descending


Get-Mailbox -ResultSize Unlimited | Get-MailboxStatistics | Select DisplayName, TotalItemSize | Sort-Object TotalItemSize -Descending




$userMailboxes = Get-Content -Path "C:\Path\To\UserMailboxes.txt"

# Loop through each user mailbox and retrieve its total size
foreach ($userMailbox in $userMailboxes) {
    $mailboxStatistics = Get-MailboxStatistics -Identity $userMailbox
    if ($mailboxStatistics) {
        $displayName = $mailboxStatistics.DisplayName
        $totalSize = $mailboxStatistics.TotalItemSize
        Write-Host "$displayName - Total Size: $totalSize"
    } else {
        Write-Host "Mailbox not found for user: $userMailbox"
    }
}




# Read the list of user display names from a CSV file
$userDisplayNames = Import-Csv -Path "C:\Path\To\UserMailboxes.csv" | Select-Object -ExpandProperty DisplayName

# Loop through each user display name and retrieve the corresponding mailbox size
foreach ($userDisplayName in $userDisplayNames) {
    $userMailbox = Get-Mailbox -Filter { DisplayName -eq $userDisplayName }
    if ($userMailbox) {
        $mailboxStatistics = Get-MailboxStatistics -Identity $userMailbox.Identity
        $displayName = $userMailbox.DisplayName
        $totalSize = $mailboxStatistics.TotalItemSize
        Write-Host "$displayName - Total Size: $totalSize"
    } else {
        Write-Host "Mailbox not found for display name: $userDisplayName"
    }
}







# Read the list of user display names from a CSV file
$userDisplayNames = Import-Csv -Path "C:\Path\To\UserMailboxes.csv" | Select-Object -ExpandProperty DisplayName

# Loop through each user display name and retrieve the corresponding mailbox size
foreach ($userDisplayName in $userDisplayNames) {
    $userMailbox = Get-Mailbox -Filter { DisplayName -eq $userDisplayName } -ResultSize 1
    if ($userMailbox) {
        $mailboxStatistics = Get-MailboxStatistics -Identity $userMailbox.Identity
        $displayName = $userMailbox.DisplayName
        $totalSize = $mailboxStatistics.TotalItemSize
        Write-Host "$displayName - Total Size: $totalSize"
    } else {
        Write-Host "Mailbox not found for display name: $userDisplayName"
    }
}


---------------------

Get-MailboxPermission -Identity "SharedMailboxName" | Where-Object {$_.User -like "*"} | ForEach-Object {
  Write-Host "User:" $_.User
  Write-Host "Send As:" ($_.CanSendAs -eq "True")
}

_---------------------------

Get-MailboxPermission -Identity "SharedMailboxName" | Where-Object {$_.User -like "*" -and $_.AccessRights -eq "SendAs"} | Remove-MailboxPermission -Confirm:$false

